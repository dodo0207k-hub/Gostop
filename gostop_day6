package gostop;

import java.util.ArrayList;

public class GostopCard {
	ArrayList<String> Gostopcard = new ArrayList<>(); //덱(카드)
	ArrayList<String> Player1 = new ArrayList<>(); //플레이어1의 손패
	ArrayList<String> Player2 = new ArrayList<>(); //플레이어2의 손패
	ArrayList<String> Player3 = new ArrayList<>(); //플레이어3의 손패
	ArrayList<String> Openedcard = new ArrayList<>(); //공유카드
	ArrayList<String> P1table = new ArrayList<>(); //플레이어1의 보유카드
	ArrayList<String> P2table = new ArrayList<>(); //플레이어2의 보유카드
	ArrayList<String> P3table = new ArrayList<>(); //플레이어3의 보유카드
	
	// 카드 초기화 메소드
	public void DeckMake() {
		//피
		for(int i = 0; i < 11; i++) {
			for(int j = 0; j < 2; j++) {
				Gostopcard.add((i + 1) + "월피" + (j + 1));
			}
		}
		//홍단
		for(int i = 0; i < 3; i++) {
			Gostopcard.add((i + 1) + "월홍단");
		}
		//고도리
		Gostopcard.add("2월고도리");
		Gostopcard.add("4월고도리");
		Gostopcard.add("8월고도리");
		//초단
		Gostopcard.add("4월초단");
		Gostopcard.add("5월초단");
		Gostopcard.add("7월초단");
		//청단
		Gostopcard.add("6월청단");
		Gostopcard.add("9월청단");
		Gostopcard.add("10월청단");
		//열끗
		Gostopcard.add("5월열끗");
		Gostopcard.add("6월열끗");
		Gostopcard.add("7월열끗");
		Gostopcard.add("10월열끗");
		Gostopcard.add("12월열끗");
		//쌍피
		Gostopcard.add("11월쌍피");
		Gostopcard.add("12월쌍피");
		//광
		Gostopcard.add("1월광");
		Gostopcard.add("3월광");
		Gostopcard.add("8월광");
		Gostopcard.add("11월광");
		//비
		Gostopcard.add("12월비광");
		Gostopcard.add("12월비띠");
		//예외
		Gostopcard.add("9월열끗(쌍피)");
	}
	//카드 보여주기 메소드
	public void gcshow() {
		System.out.println(Gostopcard);
		System.out.println(Gostopcard.size());
		System.out.println(Player1);
		System.out.println(Player2);
		System.out.println(Player3);
		System.out.println(Openedcard);
	}
	//덱 셔플 메소드2
	public void shuffle() {
		for(int i = 0; i <100; i++)// 100회 셔플
		{
		int randomindex = (int) ((Math.random() * 100) % 48); //gostopcard의 0번째 인덱스부터 47번째 인덱스 중에 하나 선택
		//스왑시작
		String random3 = Gostopcard.get(randomindex); //gostopcard의 random번째 인덱스를 random3에 넣음
		Gostopcard.remove(randomindex);//gostopcard의 random번째 인덱스를 삭제
		Gostopcard.add(random3);//gostopcard의 마지막 인덱스에 random3값을 넣음
		}
	}
	//카드 분배 메소드
	public void distribute() {
		for(int i = 0; i < 7; i++) {
			Player1.add(Gostopcard.get(i));
			Gostopcard.remove(i);
		}
		for(int i = 0; i < 7; i++) {
			Player2.add(Gostopcard.get(i));
			Gostopcard.remove(i);
		}
		for(int i = 0; i < 7; i++) {
			Player3.add(Gostopcard.get(i));
			Gostopcard.remove(i);
		}
		for(int i = 0; i < 6; i++) {
			Openedcard.add(Gostopcard.get(i));
			Gostopcard.remove(i);
		}
	}
	//플레이어테이블 보여주기 메소드
	public void ptableshow() {
		System.out.print("플레이어1의 테이블 :");
		System.out.println(P1table);
		System.out.print("플레이어2의 테이블 :");
		System.out.println(P2table);
		System.out.print("플레이어3의 테이블 :");
		System.out.println(P3table);
	}
	//카드 내고 카드 뒤집기 메소드
	public void paynturn() {
		int notcollect = 0;
//		Openedcard.add(Player1.get(0));
//		Player1.remove(0);
//		Openedcard.add(Gostopcard.get(0));
//		Gostopcard.remove(0);
		for(int i = 0; i < Openedcard.size(); i++) {
				if(Openedcard.get(i).charAt(0) == Player1.get(0).charAt(0) && Openedcard.get(i).charAt(1) == Player1.get(0).charAt(1)) { //플레이어가 낸 카드와 세트인 카드가 공유카드에 있을 경우
						System.out.println("두 카드는 일치합니다.");
						P1table.add(Player1.get(0));
						Player1.remove(0);
						P1table.add(Openedcard.get(i));
						Openedcard.remove(i);
						break;
					}
				else {
					notcollect++;
					System.out.println(i + "번째 공유카드는 일치하지않습니다.");
					if(notcollect == Openedcard.size()) {
						Openedcard.add(Player1.get(0));
						Player1.remove(0);
						break;
					}
				}
			}
		
	}
}
